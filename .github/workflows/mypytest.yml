# V0.1
name: Pytest

on: [push, workflow_dispatch]
  # Allows you to run this workflow manually from the Actions tab

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [2.7, 3.6]
        # python-version: [3.6] # Concentrate on working CI for python3 & we will see backport for py2 afterward
        python-architecture: [x86, x64]
        include:
            # Translate architecture to bitness for py.exe commandline
            - python-bitness-to-test: 32
              python-architecture: x86
            - python-bitness-to-test: 64
              python-architecture: x64

    steps:
      - uses: actions/checkout@v4
      # - uses: LizardByte/setup-python-action@master # Test this action for manual installation on python2.7
      # Pfw testing need both 32b & 64b of tested python version for cross-bitness python injection tests
      ## Install the 32bits version
      - name: Set up Python ${{ matrix.python-version }} x86
        uses: LizardByte/setup-python-action@master
        with:
          python-version: ${{ matrix.python-version}}
          python-version: 3.6
          architecture: x86
      ## Install the 64bits version
      - name: Set up Python ${{ matrix.python-version }} x64
        uses: LizardByte/setup-python-action@master
        with:
          python-version: ${{ matrix.python-version}}
          python-version: 3.6
          architecture: x64
      # Install PythonForWindows for both bitness
      - name: Installing PythonForWindows for both bitness
        run: |
            py -${{ matrix.python-version}}-32 setup.py install
            py -${{ matrix.python-version}}-64 setup.py install

      - name: Installing pytest
        run: py -${{ matrix.python-version}}-${{ matrix.python-bitness-to-test}} -m pip install pytest

      # Testing
      - name: Testing
        run: py -${{ matrix.python-version}}-${{ matrix.python-bitness-to-test}} -m pytest --junitxml=junit/test-results.xml -k "not debugger and not known_to_fail" -v tests/

      - name: Publish PyTest Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
         files: junit/test-results.xml
